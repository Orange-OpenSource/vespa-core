{"name":"Vespa-core","tagline":"Vespa is a IaaS cloud security framework. It is based on security automation.","body":"## Synopsis\r\n\r\nThis project is the core of the VESPA framework. It can enable communications between heterogeneous components.\r\n\r\n[![Build Status](https://travis-ci.org/Orange-OpenSource/vespa-core.svg?branch=master)](https://travis-ci.org/Orange-OpenSource/vespa-core) [![Build Status](https://readthedocs.org/projects/vespa-core/badge/?version=latest)](http://vespa-core.readthedocs.org/en/latest/) [![Coverage Status](https://img.shields.io/coveralls/Orange-OpenSource/vespa-core.svg)](https://coveralls.io/r/Orange-OpenSource/vespa-core)\r\n\r\n## Getting started\r\n\r\nThe tutorial (branch tutorial) delivers the basic of agent implementation and how to manage alerts on the Vertical Orchestrator.\r\n\r\n## Code Example\r\n\r\nThe politics are defined as Finite State Machine in Python. It enables easy parametrization and comprehensive view of autonomic loops. The ``alert`` function is the main component of the orchestration.\r\n\r\nAgent nodes are linked to security components, such as firewalls and anti-viruses, and mediate vendor lock-ins with the framework orchestration APIs. The functions are exported to other nodes and can be called automatically. The ``sendRemote`` function is a primitive to communicate with other nodes.\r\n\r\n## Motivation\r\n\r\nThe VESPA framework aims at giving the building block for an autonomic security on cloud computing environments.\r\n\r\n## Installation\r\n\r\nGrab the core files of the project with the following commands:\r\n\r\n```bash\r\ngit clone https://github.com/Orange-OpenSource/vespa-core\r\ncd vespa-core\r\n```\r\n\r\nA convenient way to start is to follow the tutorial (branch tutorial) and setup a local environment.\r\n\r\n## Documentation\r\n\r\nThe [documentation](http://vespa-core.readthedocs.org/en/latest/) is available on readthedocs.org.\r\n\r\nThe API of nodes is described into the code as docstrings. It can be built to another format using the following command in the root directory :\r\n\r\n```bash\r\nsphinx-apidoc2 -F -o docs vespa\r\n```\r\n\r\n## Tests\r\n\r\nNumerous unit tests are defined to test various code functionality. You can run the test suite with the following commands in the root directory :\r\n\r\n```bash\r\npython2 setup.py test\r\n```\r\n\r\nor\r\n\r\n```bash\r\npy.test2\r\n```\r\n\r\n## Contributors\r\n\r\nAurélien Wailly, Marc Lacoste, Kévin Grandemange, Aymerik Tabourin.\r\n\r\n## License\r\n\r\nThe code is released as LGPL v2.1, and contains some external code under MIT license.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}